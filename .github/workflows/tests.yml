name: Tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  quality:
    name: Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install -U pip 
          python -m pip install -e '.[dev]'
      - name: Tests
        run: ./check.sh

  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: pip
      - name: Install test dependencies
        run: |
          python -m pip install -U pip 
          python -m pip install -e '.[test]'
      - name: Tests
        run: |
          sphinx-build -d docs docs/source docs_out --color -W -bhtml

  tests:
    name: "${{ matrix.os.emoji }} ${{ matrix.python.name }}"
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - emoji: üêß
            runs-on: [ubuntu-latest]
          - emoji: üçé
            runs-on: [macos-latest]
          - emoji: ü™ü
            runs-on: [windows-latest]
        python:
          - name: CPython 3.8
            runs-on: "3.8"
          - name: CPython 3.9
            runs-on: "3.9"
          - name: CPython 3.10
            runs-on: "3.10"
          - name: CPython 3.11
            runs-on: "3.11"
          - name: CPython 3.12
            runs-on: "3.12-dev"
          - name: PyPy 3.9
            runs-on: "pypy-3.9"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.runs-on }}
          cache: pip
          check-latest: true
      - name: Install test dependencies
        run: |
          python -m pip install -U pip wheel 
          python -m pip install -e '.[dev,test]'
      - name: Tests (GNU/Linux)
        if: matrix.os.emoji == 'üêß'
        run: xvfb-run python -m pytest
      - name: Tests (macOS, Windows)
        if: matrix.os.emoji != 'üêß'
        run: python -m pytest
